{
  "version": 3,
  "sources": [
    "c:\\Users\\TeamworkGuy2\\Documents\\Visual Studio 2015\\Projects\\HDSTeamBuilding\\HDSMobileApp\\node_modules\\watchify\\node_modules\\browserify\\node_modules\\browser-pack\\_prelude.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/controllers/TestUserController.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/Defer.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/LocalStore.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/LocalStoreByDate.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/PageLoader.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/PageTools.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/main.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/psLog.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/services/ServiceData.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/services/Services.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/utils/FunctionUtil.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/utils/NumberUtil.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/modules/utils/ObjectUtil.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/app/scripts/views/TestUserView.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/node_modules/lodash/dist/lodash.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/node_modules/q/q.js",
    "c:/Users/TeamworkGuy2/Documents/Visual Studio 2015/Projects/HDSTeamBuilding/HDSMobileApp/node_modules/watchify/node_modules/browserify/node_modules/process/browser.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\r\nvar Defer = require(\"../modules/Defer\");\r\nvar Services = require(\"../modules/services/Services\");\r\n/** Example controller\r\n * @since 2015-8-11\r\n */\r\nvar TestUserController = (function () {\r\n    function TestUserController() {\r\n    }\r\n    /** Check if a user name is valid against a service\r\n     */\r\n    TestUserController.isValidUserByName = function (userName) {\r\n        var dfd = Defer.newDefer();\r\n        Services.UserMaster.search({}).done(function (res) {\r\n            var users = res.result.Items;\r\n            console.log(\"user search done: \", users);\r\n            var foundMatch = false;\r\n            var matchingUser = null;\r\n            for (var i = 0, size = users.length; i < size; i++) {\r\n                console.log(\"names match: \", users[i].Name, \" = \", userName, \" : \", (users[i].Name === userName));\r\n                if (users[i].Name === userName) {\r\n                    matchingUser = users[i];\r\n                    foundMatch = true;\r\n                }\r\n            }\r\n            dfd.resolve(foundMatch);\r\n        }, function (err) {\r\n            dfd.reject(null);\r\n        });\r\n        return dfd.promise;\r\n    };\r\n    return TestUserController;\r\n})();\r\nmodule.exports = TestUserController;\r\n",
    "/// <reference path=\"../../tsDefinitions/lib/Q.d.ts\" />\r\n/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\nvar Q = require(\"q\");\r\n/** Defer namespace\r\n * Miscellaneous functions for simplifying promise and async handling\r\n * @author Benjamin\r\n * @since 2015-1-26\r\n */\r\nvar Defer = (function () {\r\n    function Defer() {\r\n    }\r\n    /** Create a deferred object with a 'promise' property\r\n     * @return {PsDeferred} a PS deferred object with success and error return values\r\n     */\r\n    Defer.newDefer = function () {\r\n        return Q.defer();\r\n    };\r\n    Defer.when = function (promises) {\r\n        return Q.all(promises);\r\n    };\r\n    /** Run each object from {@code args} through {@code actionFunc} and return a deferred promise that completes when all of the actions complete\r\n     * @param {Array} args: an array of objects to pass individually to {@code actionFunc}\r\n     * @param {Function(Deferred, Object} actionFunc: this action is called with a unique deferred promise that must be resolved or rejected\r\n     * somewhere in the action, and each object from {@code args} as a parameter\r\n     * @return {Promise} a promise that returns an array of all of the results returned from the calls to {@code actionFunc}\r\n     */\r\n    Defer.runActionForAll = function (args, actionFunc) {\r\n        if (typeof actionFunc !== \"function\") {\r\n            throw new Error(\"incorrect arguments (\" + args + \",\" + actionFunc + \"), expected (Array, Function)\");\r\n        }\r\n        var defs = args.map(function runActionForArg(arg) {\r\n            var def = Q.defer();\r\n            actionFunc(def, arg);\r\n            return def.promise;\r\n        });\r\n        return Q.all(defs);\r\n    };\r\n    /** Run each object from {@code args} through {@code actionFunc} and return a deferred promise that completes when all of the actions complete\r\n     * @param {Array} args: an array of objects to pass individually to {@code actionFunc}\r\n     * @param {Function(Deferred, Object} actionFunc: this action is called with a unique deferred promise that must be resolved or rejected\r\n     * somewhere in the action, and each object from {@code args} as a parameter\r\n     * @param {Boolean} failOnFirstError: true to stop running the actions when the first one throws an error,\r\n     * else continue running and return a list of successful results\r\n     * @return {Promise} a promise that returns an array of all of the results returned from the calls to {@code actionFunc}\r\n     */\r\n    Defer.runActionForAllInSeries = function (args, actionFunc, stopOnFirstError) {\r\n        if (stopOnFirstError === void 0) { stopOnFirstError = false; }\r\n        if (typeof actionFunc !== \"function\") {\r\n            throw new Error(\"incorrect arguments (\" + args + \",\" + actionFunc + \"), expected (Array, Function)\");\r\n        }\r\n        var initalDfd = Q.defer();\r\n        initalDfd.resolve(null);\r\n        var results = [];\r\n        var errors = [];\r\n        // for each action/argument combination, chain it to the previous action result\r\n        var promise = args.reduce(function runActionForArgInSeries(promise, arg) {\r\n            function successCallNextAction(res) {\r\n                results.push(res);\r\n                var dfd = Q.defer();\r\n                actionFunc(dfd, arg);\r\n                return dfd.promise;\r\n            }\r\n            function failureCallNextAction(err) {\r\n                errors.push(err);\r\n                var dfd = Q.defer();\r\n                actionFunc(dfd, arg);\r\n                return dfd.promise;\r\n            }\r\n            // handle errors if all actions need to run\r\n            if (!stopOnFirstError) {\r\n                return promise.then(successCallNextAction, failureCallNextAction);\r\n            }\r\n            else {\r\n                return promise.then(successCallNextAction);\r\n            }\r\n        }, initalDfd.promise);\r\n        return promise.then(function (res) {\r\n            results.push(res);\r\n            // remove the first item since the initial promise in the args.reduce(...) call is a dummy promise to start the chain\r\n            results.shift();\r\n            return results;\r\n        });\r\n    };\r\n    /** Chain one deferred to another, so resolve and reject callbacks pass from {@code srcPromise} to {@code dstPromise}\r\n     * @param {Promise} srcPromise: the source promise to listen to via {@link Promise#then}\r\n     * @param {Promise} dstPromise: the destination to pipe {@code srcPromise} {@link Promise#resolve} and {@link Promise#reject} callbacks to\r\n     */\r\n    Defer.chainTo = function (srcPromise, dstDfd) {\r\n        srcPromise.then(function chainedPromiseSuccess(res) {\r\n            dstDfd.resolve(res);\r\n        }, function chainedPromiseFailure(err) {\r\n            dstDfd.reject(err);\r\n        });\r\n    };\r\n    /** Chain one deferred to another, so resolve and reject callbacks pass from {@code srcPromise} to {@code dstPromise}.\r\n     * With optional success and failure functions that are called before the {@code dstProimse} is resolved/rejected.\r\n     * @param {Promise} srcPromise: the source promise to listen to via {@link Promise#then}\r\n     * @param {Promise} dstPromise: the destination to pipe {@code srcPromise} {@link Promise#resolve} and {@link Promise#reject} callbacks to\r\n     * @param {Function(Object res):[Object]} [successCall]: optional function to call if {@code srcPromise} succeeds,\r\n     * which can optionally modify the result forwarded to {@code dstPromise}\r\n     * @param {Function(Object err):[Object]} [failureCall]: optional function to call if {@code srcPromise} fails,\r\n     * which can optionally modify the error forwarded to {@code dstPromise}\r\n     */\r\n    Defer.chainToWith = function (srcPromise, dstDfd, successCall, failureCall) {\r\n        if (srcPromise == null || dstDfd == null) {\r\n            throw new Error(\"incorrect usage (\" + srcPromise + \", \" + dstDfd + \", ...), expected (Q.IPromise srcPromise, Q.Deferred: dstDfd, ...)\");\r\n        }\r\n        srcPromise.then(function chainedWithActionPromiseSucess(res) {\r\n            if (successCall) {\r\n                var newRes = null;\r\n                try {\r\n                    newRes = successCall(res);\r\n                }\r\n                catch (successCallErr) {\r\n                    dstDfd.reject(successCallErr);\r\n                }\r\n                if (newRes != null) {\r\n                    res = newRes;\r\n                }\r\n            }\r\n            dstDfd.resolve(res);\r\n        }, function chainedWithActionPromiseFailure(err) {\r\n            if (failureCall) {\r\n                var newErr = null;\r\n                try {\r\n                    newErr = failureCall(err);\r\n                }\r\n                catch (failureCallErr) {\r\n                    newErr = failureCallErr;\r\n                }\r\n                if (newErr != null) {\r\n                    err = newErr;\r\n                }\r\n            }\r\n            dstDfd.reject(err);\r\n        });\r\n    };\r\n    return Defer;\r\n})();\r\nmodule.exports = Defer;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\n/** LocalStore namespace\r\n * simple persistent storage interface for small objects or data blobs\r\n * @author multiple (Assaf, Benjamin)\r\n * @since 2015-1-30\r\n */\r\nvar LocalStore = (function () {\r\n    function LocalStore(store) {\r\n        this.MAX_ITEM_SIZE_BYTES = 500000;\r\n        this.keyValueStore = localStorage;\r\n        this.keyValueStore = store != null ? store : localStorage;\r\n        this.getItem = this.getItem.bind(this);\r\n        this.hasItem = this.hasItem.bind(this);\r\n        this.setItem = this.setItem.bind(this);\r\n        this.removeItem = this.removeItem.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    LocalStore.prototype.getItem = function (key, plainString) {\r\n        if (!key) {\r\n            return;\r\n        }\r\n        key = key.trim().toLowerCase();\r\n        var value = this.keyValueStore.getItem(key);\r\n        return plainString === true ? value : (value != null ? JSON.parse(value) : null);\r\n    };\r\n    LocalStore.prototype.hasItem = function (key) {\r\n        return this.getItem(key, true) != null;\r\n    };\r\n    LocalStore.prototype.setItem = function (key, value, plainString) {\r\n        if (!key) {\r\n            return;\r\n        }\r\n        key = key.trim().toLowerCase();\r\n        if (plainString === true && typeof value !== \"string\") {\r\n            throw new Error(\"local store value = '\" + value + \"', plain string = true, but value is not a string\");\r\n        }\r\n        var jsonString = plainString === true ? value : JSON.stringify(value);\r\n        if (jsonString.length > this.MAX_ITEM_SIZE_BYTES) {\r\n            if (console && typeof console.error === \"function\") {\r\n                console.error(\"Attempting to save too large a value to localStorage, key='\" + key + \"' size is \" + jsonString.length);\r\n            }\r\n            throw new Error(\"Attempting to save too large a value to localStorage, key='\" + key + \"' size is \" + jsonString.length);\r\n        }\r\n        this.tryLogSetItem(key, jsonString);\r\n    };\r\n    LocalStore.prototype.tryLogSetItem = function (key, value) {\r\n        try {\r\n            this.keyValueStore.setItem(key, value);\r\n        }\r\n        catch (e) {\r\n            if (console && typeof console.error === \"function\") {\r\n                console.error(\"error storing key-value '\" + key + \"' = '\" + value.substr(0, 100) + \"' in key-value store: \" + e);\r\n                console.error(e.message, e.stack);\r\n            }\r\n            throw new Error(\"error storing key-value '\" + key + \"' = '\" + value.substr(0, 100) + \"' in key-value store: \" + e);\r\n        }\r\n    };\r\n    LocalStore.prototype.removeItem = function (key) {\r\n        if (!key) {\r\n            return;\r\n        }\r\n        key = key.trim().toLowerCase();\r\n        this.keyValueStore.removeItem(key);\r\n    };\r\n    LocalStore.prototype.getKeys = function () {\r\n        return Object.keys(this.keyValueStore);\r\n    };\r\n    LocalStore.getDefaultInst = function () {\r\n        return LocalStore.defaultInst || (LocalStore.defaultInst = new LocalStore(localStorage));\r\n    };\r\n    LocalStore.getSessionInst = function () {\r\n        return LocalStore.sessionInst || (LocalStore.sessionInst = new LocalStore(sessionStorage));\r\n    };\r\n    return LocalStore;\r\n})();\r\nmodule.exports = LocalStore;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\nvar LocalStore = require(\"./LocalStore\");\r\n/** LocalStoreByDate namespace\r\n * persistent storage interface for small objects or data blobs\r\n * @see LocalStore\r\n * @author multiple (Assaf, Benjamin)\r\n * @since 2015-2-16\r\n */\r\nvar LocalStoreByDate = (function () {\r\n    function LocalStoreByDate(localStoreInst) {\r\n        this.removeRatio = 0.3; // when the local store gets too full, remove one-third of the timestamp entries\r\n        this.removalAttemptCount = 0;\r\n        this.localStoreInst = localStoreInst;\r\n    }\r\n    LocalStoreByDate.prototype.getItem = function (key, plainString) {\r\n        return this.localStoreInst.getItem(key, plainString);\r\n    };\r\n    LocalStoreByDate.prototype.hasItem = function (key) {\r\n        return this.localStoreInst.hasItem(key);\r\n    };\r\n    /** Add a new item to this storage object.\r\n     * If storage has run out of space, old timestamped items are deleted\r\n     * @return the key used for the new item\r\n     */\r\n    LocalStoreByDate.prototype.addItem = function (value, plainString) {\r\n        // work around for the granularity of Date.now() and the rollover issue with performance.now()\r\n        var key = LocalStoreByDate.uniqueTimestamp() + \"\";\r\n        try {\r\n            this.localStoreInst.setItem(key, value, plainString);\r\n        }\r\n        catch (err) {\r\n            var start = window.performance.now();\r\n            var removeCount = LocalStoreByDate.removeOldItems(this.localStoreInst, this.removeRatio);\r\n            this.removalAttemptCount++;\r\n            var end = window.performance.now();\r\n            // TODO poor solution, log this manually, since psLog imports this class and we don't want a circular dependency\r\n            this.localStoreInst.setItem(LocalStoreByDate.uniqueTimestamp() + \"\", \"removed \" + removeCount + \" local store entries in \" + Math.round(end - start) + \" ms, because local store threw error: '\" + err.message + \"': \" + JSON.stringify(err.stack));\r\n        }\r\n        return key;\r\n    };\r\n    LocalStoreByDate.prototype.removeItem = function (key) {\r\n        this.localStoreInst.removeItem(key);\r\n    };\r\n    LocalStoreByDate.prototype.getKeys = function () {\r\n        return this.localStoreInst.getKeys();\r\n    };\r\n    /** Given a {@link LocalStoreI} with integer based keys (not all keys must be integers),\r\n     * remove {@code removePercentage} percent of the smallest integer keys\r\n     * @param {Number} removePercentage: a value in the range [0.0, 1.0] that specifies the percentage of timestamped values to remove\r\n     * @param {LocalStoreI} localStore: the local storage to remove old timestamped items from\r\n     * @param {Number} [minItemsRemoved=1]: the minimum number of items to remove\r\n     * @param {Number} [maxItemsRemoved=(localStore keys where key is Integer).length]: the maximum number of items to remove,\r\n     * this defaults to the total number of integer based keys in {@code localStore}\r\n     * @return {Number} the number of items removed from the {@code localStore}\r\n     */\r\n    LocalStoreByDate.removeOldItems = function (localStore, removePercentage, minItemsRemoved, maxItemsRemoved) {\r\n        if (minItemsRemoved === void 0) { minItemsRemoved = 1; }\r\n        var timestamps = [];\r\n        // get a list of integer keys from the local store\r\n        var itemKeys = localStore.getKeys();\r\n        for (var i = 0, size = itemKeys.length; i < size; i++) {\r\n            var val = parseInt(itemKeys[i]);\r\n            if ((typeof val === \"number\" && isFinite(val) && Math.floor(val) === val)) {\r\n                timestamps.push(val);\r\n            }\r\n        }\r\n        // sort ascending\r\n        timestamps.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n        var timestampCount = timestamps.length;\r\n        maxItemsRemoved = maxItemsRemoved === void 0 ? timestampCount : Math.min(timestampCount, maxItemsRemoved);\r\n        var removeCount = Math.max(Math.min(Math.round(timestampCount * removePercentage), maxItemsRemoved), minItemsRemoved);\r\n        for (var i = 0; i < removeCount; i++) {\r\n            localStore.removeItem(timestamps[i].toString());\r\n        }\r\n        return removeCount;\r\n    };\r\n    LocalStoreByDate.getDefaultInst = function () {\r\n        return LocalStoreByDate.defaultInst;\r\n    };\r\n    LocalStoreByDate.uniqueTimestamp = function () {\r\n        return Math.round((Date.now() + window.performance.now()) / 2 * 1000);\r\n    };\r\n    // very rough test functionality\r\n    LocalStoreByDate.test = function () {\r\n        var storeDated = LocalStoreByDate.getDefaultInst();\r\n        var str = new Array(10001).join(\"0,\"); // (20k chars => 40k bytes)\r\n        var newKeys = [];\r\n        var tmp = 0;\r\n        var tmpLoops = 0;\r\n        var loops = 3;\r\n        for (var i = 0; i < loops; i++) {\r\n            var initialAttemptCount = storeDated.removalAttemptCount;\r\n            var addCount = 0;\r\n            while (storeDated.removalAttemptCount === initialAttemptCount) {\r\n                // loop, waiting until addItem() returns a new key to ensure each new key is a unique entry\r\n                var newKey = storeDated.addItem(str, true);\r\n                while (newKey === newKeys[newKeys.length - 1]) {\r\n                    for (var ii = 0; ii < 10000000; ii++) {\r\n                        tmp += (ii % 2) == 0 ? 1 : -1;\r\n                    }\r\n                    newKey = storeDated.addItem(str, true);\r\n                    tmpLoops++;\r\n                }\r\n                newKeys.push(newKey);\r\n                addCount++;\r\n            }\r\n            // once the store encounters an error, log how many items were added\r\n            console.log(\"test \" + (i + 1) + \" of \" + loops + \". added: \" + addCount + \" entries of size \" + str.length + \" (total: \" + (addCount * str.length) + \" chars)\");\r\n        }\r\n        // cleanup\r\n        var itemsRemoved = 0;\r\n        for (var i = 0, size = newKeys.length; i < size; i++) {\r\n            if (storeDated.hasItem(newKeys[i])) {\r\n                storeDated.removeItem(newKeys[i]);\r\n                itemsRemoved++;\r\n            }\r\n        }\r\n        console.log(\"cleaned up: removed \" + itemsRemoved + \" total test items (tmp loops \" + tmpLoops + \", tmp 0 == \" + tmp + \")\");\r\n    };\r\n    LocalStoreByDate.defaultInst = new LocalStoreByDate(LocalStore.getDefaultInst());\r\n    return LocalStoreByDate;\r\n})();\r\nmodule.exports = LocalStoreByDate;\r\n",
    "\"use strict\";\r\nvar FunctionUtil = require(\"../modules/utils/FunctionUtil\");\r\nvar TestUserView = require(\"../views/TestUserView\");\r\nvar Ps = require(\"./main\");\r\n/** Page initializers for HDS Mobile App\r\n * @since 2015-8-12\r\n */\r\nvar PageLoader = (function () {\r\n    function PageLoader() {\r\n        this.getPages = FunctionUtil.createLazyInitializedField(function () { return {\r\n            TestUserView: TestUserView,\r\n        }; });\r\n    }\r\n    PageLoader.prototype.loadPage = function (name) {\r\n        Ps.resetAppNewPage(null, null, window);\r\n        var elem = Ps.getPageDocument().querySelector(\"#test-user-view\");\r\n        var view = this.getPages()[name].newView(null, elem);\r\n        return view;\r\n    };\r\n    Object.defineProperty(PageLoader, \"defaultPageLoader\", {\r\n        get: function () {\r\n            return PageLoader._defaultPageLoader;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PageLoader._defaultPageLoader = new PageLoader();\r\n    // static initializer to give pages access\r\n    PageLoader.cctor = (function () {\r\n        window[\"PageLoader\"] = PageLoader;\r\n    }());\r\n    return PageLoader;\r\n})();\r\nmodule.exports = PageLoader;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\n/** Variables for managing a browser window, page, DOM, and DOM interaction tool like JQuery\r\n * @author Benjamin\r\n * @since 2015-4-10\r\n */\r\nvar PageTools;\r\n(function (PageTools) {\r\n    /** Page specific global variables\r\n     * @since 2015-2-12\r\n     */\r\n    var PageConfig = (function () {\r\n        function PageConfig(wnd, doc, jQuery) {\r\n            this._currentPageWindow = wnd;\r\n            this._currentPageDocument = doc;\r\n            this._jQueryInst = jQuery;\r\n            this._jQueryContext = jQuery != null ? jQuery(doc) : undefined;\r\n        }\r\n        PageConfig.prototype.copy = function () {\r\n            var copy = new PageConfig();\r\n            copy._currentPageWindow = this._currentPageWindow;\r\n            copy._currentPageDocument = this._currentPageDocument;\r\n            copy._jQueryInst = this._jQueryInst;\r\n            copy._jQueryContext = this._jQueryContext;\r\n            return copy;\r\n        };\r\n        Object.defineProperty(PageConfig.prototype, \"pageDocument\", {\r\n            get: function () {\r\n                return this.getPageDocument();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PageConfig.prototype.getPageDocument = function () {\r\n            return this._currentPageDocument;\r\n        };\r\n        PageConfig.prototype.setPageDocument = function (doc) {\r\n            this._currentPageDocument = doc;\r\n            if (this._jQueryContext != null && this._jQueryInst != null) {\r\n                this._jQueryContext = PageConfig.createJQueryContext(this._jQueryInst, doc);\r\n            }\r\n        };\r\n        Object.defineProperty(PageConfig.prototype, \"jQuery\", {\r\n            get: function () {\r\n                return this.getJQuery();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PageConfig.prototype.getUiAccessor = function () {\r\n            return this.getJQuery();\r\n        };\r\n        Object.defineProperty(PageConfig.prototype, \"jQueryContext\", {\r\n            get: function () {\r\n                return this.getJQueryContext();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PageConfig.prototype.getJQueryContext = function () {\r\n            return this._jQueryContext || (this._jQueryContext = PageConfig.createJQueryContext(this._jQueryInst, this.getPageDocument()));\r\n        };\r\n        PageConfig.prototype.getJQuery = function () {\r\n            return this._jQueryInst;\r\n        };\r\n        PageConfig.prototype.setJQuery = function (jQuery) {\r\n            this._jQueryInst = jQuery;\r\n        };\r\n        Object.defineProperty(PageConfig.prototype, \"pageWindow\", {\r\n            get: function () {\r\n                return this.getPageWindow();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PageConfig.prototype.getPageWindow = function () {\r\n            return this._currentPageWindow;\r\n        };\r\n        PageConfig.prototype.setPageWindow = function (wnd) {\r\n            this._currentPageWindow = wnd;\r\n        };\r\n        PageConfig.createJQueryContext = function (jquery, doc) {\r\n            return jquery(doc || PageConfig.illegalState(\"create jQuery context\", \"page document\"));\r\n        };\r\n        PageConfig.illegalState = function (context, msg) {\r\n            throw new Error(\"context: \" + context + \"; \" + \"problem: missing \" + msg);\r\n        };\r\n        return PageConfig;\r\n    })();\r\n    PageTools.PageConfig = PageConfig;\r\n})(PageTools || (PageTools = {}));\r\nmodule.exports = PageTools;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\n\"use strict\";\r\nvar PageTools = require(\"./PageTools\");\r\n/** UiUtil - miscellaneous global UI utilities\r\n * @since 2015-2-18\r\n */\r\nvar UiUtil = (function () {\r\n    function UiUtil(page) {\r\n        this.page = page;\r\n    }\r\n    /* these are used in dynamic loading of values to provide a spinner as a placeholder until a value is obtained - used in Tax Calculation on Summary page, for example*/\r\n    UiUtil.prototype.showSpinner = function (selector, ctx) {\r\n        (ctx ? this.page.jQuery(selector, ctx) : this.page.jQuery(selector, this.page.getPageDocument())).text('').addClass(\"loaderImage\");\r\n    };\r\n    UiUtil.prototype.hideSpinner = function (selector, ctx) {\r\n        (ctx ? this.page.jQuery(selector, ctx) : this.page.jQuery(selector, this.page.getPageDocument())).removeClass(\"loaderImage\");\r\n    };\r\n    return UiUtil;\r\n})();\r\n/** Ps namespace\r\n * the root of the MobileApp application\r\n * @since 2015-2-10\r\n */\r\nvar Ps = (function () {\r\n    function Ps() {\r\n    }\r\n    Ps.resetAppNewPage = function (psInst /*TODO : psInstance*/, svcs /*TODO : Services*/, wnd, pageDocument, url) {\r\n        if (pageDocument === void 0) { pageDocument = wnd.document; }\r\n        if (url === void 0) { url = pageDocument.location.href; }\r\n        Ps.resetAppState(psInst);\r\n        if (window[\"$\"]) {\r\n            Ps.setJQuery(window[\"$\"]);\r\n        }\r\n        Ps.setCurrentPage(wnd, pageDocument);\r\n        Ps.urlLoaded(svcs, url);\r\n    };\r\n    /**\r\n     * @param psInst the current app's {@link psInstance} to reset\r\n     */\r\n    Ps.resetAppState = function (psInst /*TODO : psInstance*/) {\r\n        if (psInst) {\r\n            psInst.currentBid.reset();\r\n        }\r\n    };\r\n    /** Call when a new page has been loaded (or the current page reloaded) by an outside source, such as the user\r\n     * @param svcs the {@link Services} instance to apply this change to\r\n     * @param url optional new page URL being navigated to\r\n     */\r\n    Ps.urlLoaded = function (svcs /*TODO : Services*/, url) {\r\n        if (svcs) {\r\n            svcs.navigated(url);\r\n        }\r\n    };\r\n    Ps.setCurrentPage = function (wnd, pageDocument) {\r\n        if (pageDocument === void 0) { pageDocument = wnd.document; }\r\n        Ps.setPageWindow(wnd);\r\n        Ps.setPageDocument(pageDocument);\r\n    };\r\n    Ps.setPageDocument = function (newPageDocument) {\r\n        Ps.pageSettings.setPageDocument(newPageDocument);\r\n    };\r\n    Ps.setJQuery = function (jQueryInst) {\r\n        Ps.pageSettings.setJQuery(jQueryInst);\r\n    };\r\n    Ps.getPageDocument = function () {\r\n        return Ps.pageSettings.getPageDocument();\r\n    };\r\n    Ps.getJQuery = function () {\r\n        return Ps.pageSettings.getJQuery();\r\n    };\r\n    Ps.getJQueryContext = function () {\r\n        return Ps.pageSettings.getJQueryContext();\r\n    };\r\n    Ps.getUiUtil = function () {\r\n        return Ps.uiUtil || (Ps.uiUtil = new UiUtil(Ps.pageSettings));\r\n    };\r\n    Ps.getPageWindow = function () {\r\n        return Ps.pageSettings.getPageWindow();\r\n    };\r\n    Ps.setPageWindow = function (wnd) {\r\n        Ps.pageSettings.setPageWindow(wnd);\r\n    };\r\n    Ps.createDefaultPageInfo = function () {\r\n        return Ps.pageSettings.copy();\r\n    };\r\n    Ps.pageSettings = new PageTools.PageConfig();\r\n    return Ps;\r\n})();\r\nvar Ps;\r\n(function (Ps) {\r\n    (function (ModelRole) {\r\n        ModelRole[ModelRole[\"MASTER\"] = 0] = \"MASTER\";\r\n        ModelRole[ModelRole[\"CUSTOM\"] = 1] = \"CUSTOM\";\r\n        ModelRole[ModelRole[\"CUSTOMIZED_MASTER\"] = 2] = \"CUSTOMIZED_MASTER\";\r\n        ModelRole[ModelRole[\"ALL\"] = 3] = \"ALL\";\r\n    })(Ps.ModelRole || (Ps.ModelRole = {}));\r\n    var ModelRole = Ps.ModelRole;\r\n})(Ps || (Ps = {}));\r\nmodule.exports = Ps;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\nvar LocalStoreByDate = require(\"./LocalStoreByDate\");\r\n/** PsLogs class\r\n * error/info logging instances for PowerScope, uses 'log4javascript' library\r\n * @since 2015-2-10\r\n */\r\nvar PsLog = (function () {\r\n    function PsLog() {\r\n    }\r\n    Object.defineProperty(PsLog, \"log\", {\r\n        get: function () {\r\n            return PsLog._defaultLog ? PsLog._defaultLog : PsLog.initDefaultLog();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PsLog.initDefaultLog = function () {\r\n        var log = log4javascript.getLogger(\"powerscope\");\r\n        log.addAppender(PsLog.getBrowserConsoleAppender());\r\n        PsLog._defaultLog = log;\r\n        return PsLog._defaultLog;\r\n    };\r\n    Object.defineProperty(PsLog, \"logs\", {\r\n        get: function () {\r\n            return PsLog._logs ? PsLog._logs : PsLog.initLogs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PsLog.initLogs = function () {\r\n        PsLog._logs = {\r\n            login: log4javascript.getLogger(\"login\"),\r\n            syncing: log4javascript.getLogger(\"syncing\"),\r\n            services: log4javascript.getLogger(\"services\")\r\n        };\r\n        var log = PsLog.getBrowserConsoleAppender();\r\n        var localStoreAppender = PsLog.getLocalStoreAppender();\r\n        PsLog._logs.login.addAppender(log);\r\n        PsLog._logs.login.addAppender(localStoreAppender);\r\n        PsLog._logs.syncing.addAppender(log);\r\n        PsLog._logs.syncing.addAppender(localStoreAppender);\r\n        PsLog._logs.services.addAppender(log);\r\n        PsLog._logs.services.addAppender(localStoreAppender);\r\n        return PsLog._logs;\r\n    };\r\n    PsLog.getBrowserConsoleAppender = function () {\r\n        if (PsLog._browserConsoleAppender == null) {\r\n            var log = new log4javascript.BrowserConsoleAppender();\r\n            log.setLayout(new log4javascript.SimpleLayout()); //new log4javascript.PatternLayout(log4javascript.PatternLayout.DEFAULT_CONVERSION_PATTERN);\r\n            PsLog._browserConsoleAppender = log;\r\n        }\r\n        return PsLog._browserConsoleAppender;\r\n    };\r\n    PsLog.getLocalStoreAppender = function () {\r\n        if (PsLog._localStoreAppender == null) {\r\n            PsLog._localStoreAppender = new LocalStoreAppender(LocalStoreByDate.getDefaultInst());\r\n        }\r\n        return PsLog._localStoreAppender;\r\n    };\r\n    PsLog.localStoreInst = LocalStoreByDate.getDefaultInst();\r\n    return PsLog;\r\n})();\r\n/** A {@link log4javascript.Append} that appends to a {@link UniqueStoreI}.\r\n * With the option to consolidate events from a {@code #group(String) groups} into single log entries\r\n * @author Benjamin\r\n * @since 2015-2-16\r\n */\r\nvar LocalStoreAppender = (function () {\r\n    function LocalStoreAppender(localStore, mergeGroupEvents) {\r\n        if (mergeGroupEvents === void 0) { mergeGroupEvents = false; }\r\n        this.currentGroupEvents = [];\r\n        this.store = localStore;\r\n        this.mergeGroups = mergeGroupEvents;\r\n    }\r\n    LocalStoreAppender.prototype.append = function (loggingEvent) {\r\n        if (this.inGroup === true && this.mergeGroups === true) {\r\n            this.currentGroupEvents.push(loggingEvent);\r\n        }\r\n        else {\r\n            var value = JSON.stringify(loggingEvent);\r\n            if (loggingEvent.level.isGreaterOrEqual(this[\"threshold\"])) {\r\n                this.store.addItem(value);\r\n            }\r\n        }\r\n    };\r\n    LocalStoreAppender.prototype.group = function (name) {\r\n        this.inGroup = true;\r\n        this.currentGroupName = name;\r\n        this.currentGroupEvents = [];\r\n    };\r\n    LocalStoreAppender.prototype.groupEnd = function () {\r\n        var groupName = this.currentGroupName;\r\n        var groupEvents = this.currentGroupEvents;\r\n        if (this.mergeGroups === true) {\r\n            // consolidate multiple log events from a group into a single object\r\n            this.store.addItem(JSON.stringify({\r\n                groupName: groupName,\r\n                events: groupEvents\r\n            }));\r\n        }\r\n        this.inGroup = false;\r\n        this.currentGroupName = null;\r\n        this.currentGroupEvents = null;\r\n    };\r\n    LocalStoreAppender.prototype.toString = function () {\r\n        return \"LocalStoreAppender\";\r\n    };\r\n    // TODO poor workaround for 'extends' not working correctly\r\n    LocalStoreAppender.tmp = (function () {\r\n        LocalStoreAppender.prototype = new log4javascript.Appender();\r\n        LocalStoreAppender.prototype[\"appender\"] = new log4javascript.Appender();\r\n        LocalStoreAppender.prototype[\"layout\"] = new log4javascript.NullLayout();\r\n        LocalStoreAppender.prototype[\"threshold\"] = log4javascript.Level.DEBUG;\r\n    }());\r\n    return LocalStoreAppender;\r\n})();\r\nmodule.exports = PsLog;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\n/** ServiceData module\r\n * information about a service call/interface\r\n * @since 2015-1-20\r\n */\r\nvar ServiceData;\r\n(function (ServiceData) {\r\n    (function (SvcType) {\r\n        SvcType[SvcType[\"POST\"] = 0] = \"POST\";\r\n        SvcType[SvcType[\"GET\"] = 1] = \"GET\";\r\n        SvcType[SvcType[\"DELETE\"] = 2] = \"DELETE\";\r\n    })(ServiceData.SvcType || (ServiceData.SvcType = {}));\r\n    var SvcType = ServiceData.SvcType;\r\n    (function (SvcDataType) {\r\n        SvcDataType[SvcDataType[\"JSON\"] = 0] = \"JSON\";\r\n        SvcDataType[SvcDataType[\"PLAIN\"] = 1] = \"PLAIN\";\r\n    })(ServiceData.SvcDataType || (ServiceData.SvcDataType = {}));\r\n    var SvcDataType = ServiceData.SvcDataType;\r\n})(ServiceData || (ServiceData = {}));\r\nmodule.exports = ServiceData;\r\n",
    "/// <reference path=\"../../../tsDefinitions/mobileapp.d.ts\" />\r\n/// <reference path=\"../../../tsDefinitions/lib/jquery.d.ts\" />\r\n/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved.\r\n * @since 2015-2-9\r\n */\r\n\"use strict\";\r\nvar _ = require(\"lodash\");\r\nvar Defer = require(\"../Defer\");\r\nvar psLog = require(\"../psLog\");\r\nvar ObjectUtil = require(\"../utils/ObjectUtil\");\r\nvar FunctionUtil = require(\"../utils/FunctionUtil\");\r\nvar ServiceData = require(\"./ServiceData\");\r\nvar Ps = require(\"../main\");\r\n/** Services namespace\r\n * Utility functions for invoking Powerscope web API services\r\n * @author Benjamin\r\n * @since 2014-11-25\r\n */\r\nvar Services = (function () {\r\n    function Services() {\r\n    }\r\n    Services.pageBaseUrl = function () {\r\n        return Services._pageBaseUrl;\r\n    };\r\n    /** a url which, when added to the beginning of the current url, relatives it to the base powerscope app directory */\r\n    Services.baseUrl = function () {\r\n        return Services._baseUrl;\r\n    };\r\n    /** the default service call timeout period in milliseconds */\r\n    Services.defaultTimeOut = function () {\r\n        return Services._defaultTimeOut;\r\n    };\r\n    /** the default server handshake timeout period in milliseconds */\r\n    Services.handshakeTimeout = function () {\r\n        return Services._handshakeTimeout;\r\n    };\r\n    /** Call when a new page has been loaded (or the current page reloaded) by an outside source, such as the user\r\n     * @param url optional new page URL being navigated to\r\n     */\r\n    Services.navigated = function (url) {\r\n        Services._baseUrl = \"/\";\r\n    };\r\n    /** call a web server using a GET request\r\n     * @param {String} relativeUrl: the domain relative URL of the web service to call, for example \"BidService.svc/Bid/GetById\"\r\n     * @param {Array<String>} parameterNames: an array of parameter names to include in the request URL, for example [\"userIdentifier\", \"bidId\"]\r\n     * @param {Array<String>} parameterValues: an array of parameter values to include in the request URL, for example [\"john_doe\", 23848]\r\n     * @param {Boolean} expectArrayResponse: true if the expected response is an array, false if the expected response is a single object\r\n     * @param {String} [responseDataPropertyName]: the name of the property to return from the response object, if this value is null/undefined,\r\n     * then the entire response object is returned as is when received\r\n     * @return {Promise}\r\n     * resolve: @return {ServiceResult} response objects\r\n     * reject: @return {ServiceError} the error object containing the XHR request,\r\n     * the error title/descriptor and the server's error response text\r\n     */\r\n    Services.callGetService = function (relativeUrl, parameterNames, parameterValues, expectArrayResponse, responseDataPropertyName, requestProperties) {\r\n        if (parameterNames === void 0) { parameterNames = null; }\r\n        if (parameterValues === void 0) { parameterValues = null; }\r\n        if (expectArrayResponse === void 0) { expectArrayResponse = false; }\r\n        if (responseDataPropertyName === void 0) { responseDataPropertyName = null; }\r\n        if (requestProperties === void 0) { requestProperties = {}; }\r\n        var def = Defer.newDefer();\r\n        var paramAry = [];\r\n        if (parameterNames != null && parameterValues != null) {\r\n            if (parameterNames.length !== parameterValues.length) {\r\n                throw new Error(\"error calling service '\" + relativeUrl + \"', expected number of parameter names (\" + parameterNames.length + \") to equal number of parameter values (\" + parameterValues.length + \")\");\r\n            }\r\n            for (var paramI = 0, size = parameterNames.length; paramI < size; paramI++) {\r\n                paramAry.push(encodeURIComponent(parameterNames[paramI]) + \"=\" + encodeURIComponent(parameterValues[paramI]));\r\n            }\r\n        }\r\n        var xhr = null;\r\n        var ajaxSettings = _.extend(requestProperties, {\r\n            url: Services.baseUrl() + relativeUrl + (paramAry.length > 0 ? \"?\" + paramAry.join(\"&\") : \"\"),\r\n            method: \"GET\",\r\n            contentType: \"application/json\",\r\n            timeout: Services.defaultTimeOut(),\r\n            success: function (response) {\r\n                var results = null;\r\n                if (expectArrayResponse === true) {\r\n                    results = [];\r\n                    if (responseDataPropertyName != null) {\r\n                        if (response[responseDataPropertyName] != null) {\r\n                            results = response[responseDataPropertyName];\r\n                        }\r\n                    }\r\n                    else {\r\n                        results = response;\r\n                    }\r\n                }\r\n                else {\r\n                    if (responseDataPropertyName != null) {\r\n                        results = response[responseDataPropertyName];\r\n                    }\r\n                    else {\r\n                        results = response;\r\n                    }\r\n                }\r\n                def.resolve({ result: results, xhr: xhr });\r\n                return results;\r\n            },\r\n            error: function (xhr, ts, et) {\r\n                def.reject({ xhr: xhr, textStatus: ts, errorThrown: et });\r\n                return null;\r\n            }\r\n        });\r\n        xhr = Ps.getJQuery().ajax(ajaxSettings);\r\n        return def.promise;\r\n    };\r\n    /** call a web server using a POST request\r\n     * @param {String} relativeUrl: the domain relative URL of the web service to call, for example \"BidSearchService.svc/BidSearch\"\r\n     * @param {Object} data: the object to encode using {@code JSON.stringify()} and send to the service\r\n     * @param {Array<String>} parameterNames: an array of parameter names to include in the request URL, for example [\"userIdentifier\", \"bidId\"]\r\n     * @param {Array<String>} parameterValues: an array of parameter values to include in the request URL, for example [\"john_doe\", 23848]\r\n     * @param {Boolean} expectArrayResponse: true if the expected response is an array, false if the expected response is a single object\r\n     * @param {String} [responseDataPropertyName]: the name of the property to return from the response object, if this value is null/undefined,\r\n     * then the entire response object is returned as is when received\r\n     * @return {Promise}\r\n     * resolve: @return {ServiceResult} response objects\r\n     * reject: @return {ServiceError} the error object containing the XHR request,\r\n     * the error title/descriptor and the server's error response text\r\n     */\r\n    Services.callPostService = function (relativeUrl, data, parameterNames, parameterValues, expectArrayResponse, responseDataPropertyName, requestProperties) {\r\n        if (parameterNames === void 0) { parameterNames = null; }\r\n        if (parameterValues === void 0) { parameterValues = null; }\r\n        if (expectArrayResponse === void 0) { expectArrayResponse = false; }\r\n        if (responseDataPropertyName === void 0) { responseDataPropertyName = null; }\r\n        if (requestProperties === void 0) { requestProperties = {}; }\r\n        var def = Defer.newDefer();\r\n        var paramAry = [];\r\n        if (parameterNames != null && parameterValues != null) {\r\n            if (parameterNames.length !== parameterValues.length) {\r\n                throw new Error(\"error calling service '\" + relativeUrl + \"', expected number of parameter names (\" + parameterNames.length + \") to equal number of parameter values (\" + parameterValues.length + \")\");\r\n            }\r\n            for (var paramI = 0, size = parameterNames.length; paramI < size; paramI++) {\r\n                paramAry.push(encodeURIComponent(parameterNames[paramI]) + \"=\" + encodeURIComponent(parameterValues[paramI]));\r\n            }\r\n        }\r\n        psLog.logs.login.trace(\"calling post service\", relativeUrl);\r\n        var xhr = null;\r\n        var ajaxSettings = _.extend(requestProperties, {\r\n            url: Services.baseUrl() + relativeUrl + (paramAry.length > 0 ? \"?\" + paramAry.join(\"&\") : \"\"),\r\n            method: \"POST\",\r\n            timeout: Services.defaultTimeOut(),\r\n            success: function (response) {\r\n                var results = null;\r\n                if (expectArrayResponse === true) {\r\n                    results = [];\r\n                    if (responseDataPropertyName != null) {\r\n                        if (response[responseDataPropertyName] != null) {\r\n                            results = response[responseDataPropertyName];\r\n                        }\r\n                    }\r\n                    else {\r\n                        results = response;\r\n                    }\r\n                }\r\n                else {\r\n                    if (responseDataPropertyName != null) {\r\n                        results = response[responseDataPropertyName];\r\n                    }\r\n                    else {\r\n                        results = response;\r\n                    }\r\n                }\r\n                def.resolve({ result: results, xhr: xhr });\r\n                return results;\r\n            },\r\n            error: function (xhr, ts, et) {\r\n                def.reject({ xhr: xhr, textStatus: ts, errorThrown: et });\r\n                return null;\r\n            }\r\n        });\r\n        if (data != null) {\r\n            ajaxSettings.contentType = \"application/json\";\r\n            ajaxSettings.data = JSON.stringify(data);\r\n        }\r\n        xhr = Ps.getJQuery().ajax(ajaxSettings);\r\n        return def.promise;\r\n    };\r\n    /** call {@link Services#doHandshake()} followed by a GET web service request\r\n      * @return {Promise}\r\n     * resolve: @return {ServiceResult} response objects\r\n     * reject: @return {ServiceError, Boolean serverOffline} the error object containing the XHR request,\r\n     * the error title/descriptor and the server's error response text.\r\n     * Second parameter is true if the handshake failed, false if the service call failed\r\n     * @see Services#doHandshake()\r\n     * @see Services#callPostService()\r\n     */\r\n    Services.callHandshakeGetService = function (relativeUrl, parameterNames, parameterValues, expectArrayResponse, responseDataPropertyName, requestProperties) {\r\n        if (expectArrayResponse === void 0) { expectArrayResponse = false; }\r\n        if (responseDataPropertyName === void 0) { responseDataPropertyName = null; }\r\n        var def = Defer.newDefer();\r\n        Services.doHandshake(function () {\r\n            Services.callGetService(relativeUrl, parameterNames, parameterValues, expectArrayResponse, responseDataPropertyName, requestProperties).done(function (res) {\r\n                def.resolve(res);\r\n            }, function (svcErr) {\r\n                def.reject({\r\n                    error: svcErr,\r\n                    isHandshakeError: false\r\n                });\r\n            });\r\n        }, function (xhr, ts, et) {\r\n            def.reject({\r\n                error: { xhr: xhr, textStatus: ts, errorThrown: et },\r\n                isHandshakeError: true\r\n            }); // server offline\r\n        });\r\n        return def.promise;\r\n    };\r\n    /** call {@link Services#doHandshake()} followed by a POST web service request\r\n     * @return {Promise}\r\n     * resolve: @return {ServiceResult} response objects\r\n     * reject: @return {ServiceError, Boolean serverOffline} the error object containing the XHR request,\r\n     * the error title/descriptor and the server's error response text.\r\n     * Second parameter is true if the handshake failed, false if the service call failed\r\n     * @see Services#doHandshake()\r\n     * @see Services#callPostService()\r\n     */\r\n    Services.callHandshakePostService = function (relativeUrl, data, parameterNames, parameterValues, expectArrayResponse, responseDataPropertyName, requestProperties) {\r\n        if (parameterNames === void 0) { parameterNames = null; }\r\n        if (parameterValues === void 0) { parameterValues = null; }\r\n        if (expectArrayResponse === void 0) { expectArrayResponse = false; }\r\n        if (responseDataPropertyName === void 0) { responseDataPropertyName = null; }\r\n        var def = Defer.newDefer();\r\n        Services.doHandshake(function () {\r\n            Services.callPostService(relativeUrl, data, parameterNames, parameterValues, expectArrayResponse, responseDataPropertyName, requestProperties).done(function (res) {\r\n                def.resolve(res);\r\n            }, function (svcErr) {\r\n                def.reject({\r\n                    error: svcErr,\r\n                    isHandshakeError: false\r\n                });\r\n            });\r\n        }, function (xhr, ts, et) {\r\n            def.reject({\r\n                error: { xhr: xhr, textStatus: ts, errorThrown: et },\r\n                isHandshakeError: true\r\n            }); // server offline\r\n        });\r\n        return def.promise;\r\n    };\r\n    /** Same as doHandshake, except the failure function takes a {@link ServiceTransactionError}\r\n     * @see Services#doHandshake\r\n     */\r\n    Services.callHandshake = function (successFunc, failureFunc) {\r\n        return Services.doHandshake(successFunc, function (xhr, textStatus, errorThrown) {\r\n            failureFunc({\r\n                error: { xhr: xhr, textStatus: textStatus, errorThrown: errorThrown },\r\n                isHandshakeError: true\r\n            });\r\n        });\r\n    };\r\n    Services.doHandshake = function (successfunction, failurefunction) {\r\n        console.log(\"doHandshake: \", Ps.getJQuery());\r\n        Ps.getJQuery().ajax({\r\n            url: Services.baseUrl() + \"LoginHandshakeService.svc/iSynch\",\r\n            method: \"GET\",\r\n            timeout: Services.handshakeTimeout(),\r\n            cache: false,\r\n            success: function (result) {\r\n                FunctionUtil.tryCatch(successfunction, function (errMsg) {\r\n                    console.error(errMsg);\r\n                    failurefunction(null, '', errMsg);\r\n                });\r\n            },\r\n            error: function (xhr, textStatus, errorThrown) {\r\n                psLog.logs.services.error(\"initial handshake error\", xhr);\r\n                if (xhr.status == 0 || textStatus.indexOf(\"Abort\") != -1) {\r\n                    if (typeof failurefunction != \"undefined\") {\r\n                        failurefunction(xhr, textStatus, errorThrown);\r\n                        return;\r\n                    }\r\n                }\r\n                if (xhr.status == 404 && !Services.offlineChecked) {\r\n                    // If any ajax errors because of a 404, we need to figure out if it's\r\n                    // a 404 because they are not authenticated with web-sso or if they are actually offline\r\n                    //need to see if a call to a non-websso page exists\r\n                    psLog.logs.services.error(\"check if index.html exists\");\r\n                    Ps.getJQuery().ajax({\r\n                        url: Services.baseUrl() + \"../index.html\",\r\n                        method: \"GET\",\r\n                        cache: false,\r\n                        success: function (result) {\r\n                            psLog.logs.login.debug(\"we are online but need to reauthenticate with websso\");\r\n                            //read GET vars into variable\r\n                            var vars = {};\r\n                            // TODO unknown function definition\r\n                            var parts = Ps.getPageWindow().location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\r\n                                vars[key] = value;\r\n                            });\r\n                            // prevent a reload loop if there's a config error that makes the login\r\n                            // service give a false 404\r\n                            psLog.logs.login.trace(\"reauthenticate vars: \", vars);\r\n                            if (\"reload\" in vars) {\r\n                                failurefunction(null, '', \"Preventing redirect loop\");\r\n                                return;\r\n                            }\r\n                            // add query string to force a non-cached copy of the page we're on so\r\n                            // web-sso picks it up and sends us to login page\r\n                            var key = \"reload\";\r\n                            var value = Math.floor(Math.random() * 90000) + 10000;\r\n                            var kvp = Ps.getPageDocument().location.search.substr(1).split('&');\r\n                            var i = kvp.length;\r\n                            while (i--) {\r\n                                var x = kvp[i].split('=');\r\n                                if (x[0] == key) {\r\n                                    x[1] = value.toString();\r\n                                    kvp[i] = x.join('=');\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (kvp.length === 0) {\r\n                                kvp[kvp.length] = [key, value].join('=');\r\n                            }\r\n                            Services.offlineChecked = true;\r\n                            Ps.getPageDocument().location.search = kvp.join('&');\r\n                        },\r\n                        error: function (xhr, textStatus, errorThrown) {\r\n                            Services.offlineChecked = true;\r\n                            psLog.logs.services.info(\"we are in offline mode\");\r\n                            if (typeof failurefunction != \"undefined\") {\r\n                                failurefunction(xhr, textStatus, errorThrown);\r\n                                return;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (typeof failurefunction != \"undefined\") {\r\n                        failurefunction(xhr, textStatus, errorThrown);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Services._baseUrl = \"./\";\r\n    Services._pageBaseUrl = \"/app/pages/\";\r\n    Services._defaultTimeOut = 600000;\r\n    Services._handshakeTimeout = 30000;\r\n    //checks online status\r\n    Services.offlineChecked = false;\r\n    return Services;\r\n})();\r\nvar Services;\r\n(function (Services) {\r\n    var UserMaster = (function () {\r\n        function UserMaster() {\r\n        }\r\n        UserMaster.search = function (postData) {\r\n            return Util.svcCall(false, \"UserMasterService.svc/UserMaster/Search\", 0 /* POST */, null, 0 /* JSON */, postData);\r\n        };\r\n        return UserMaster;\r\n    })();\r\n    Services.UserMaster = UserMaster;\r\n    var Util = (function () {\r\n        function Util() {\r\n        }\r\n        Util.svcCall = function (requireHandshake, url, callType, urlParameters, postDataType, postData, requestProperties) {\r\n            if (requireHandshake) {\r\n                var urlParamKeys = null;\r\n                var urlParamVals = null;\r\n                if (urlParameters != null) {\r\n                    urlParamKeys = Object.keys(urlParameters);\r\n                    urlParamVals = ObjectUtil.values(urlParameters, urlParamKeys);\r\n                }\r\n                switch (callType) {\r\n                    case 1 /* GET */:\r\n                        return Services.callHandshakeGetService(url, urlParamKeys, urlParamVals, false, null, requestProperties);\r\n                    case 2 /* DELETE */:\r\n                        throw new Error(\"unimplemented service call type 'DELETE'\");\r\n                    case 0 /* POST */:\r\n                        return Services.callHandshakePostService(url, postData, urlParamKeys, urlParamVals, false, null, requestProperties);\r\n                    default:\r\n                        throw new Error(\"unknown SvcType '\" + callType + \"'\");\r\n                }\r\n            }\r\n            else {\r\n                switch (callType) {\r\n                    case 1 /* GET */:\r\n                        var urlParamKeys = null;\r\n                        var urlParamVals = null;\r\n                        if (urlParameters != null) {\r\n                            urlParamKeys = Object.keys(urlParameters);\r\n                            urlParamVals = ObjectUtil.values(urlParameters, urlParamKeys);\r\n                        }\r\n                        return Services.callGetService(url, urlParamKeys, urlParamVals, false, null, requestProperties);\r\n                    case 2 /* DELETE */:\r\n                        throw new Error(\"unimplemented service call type 'DELETE'\");\r\n                    case 0 /* POST */:\r\n                        return Services.callPostService(url, postData, urlParamKeys, urlParamVals, false, null, requestProperties);\r\n                    default:\r\n                        throw new Error(\"unknown SvcType '\" + callType + \"'\");\r\n                }\r\n            }\r\n        };\r\n        return Util;\r\n    })();\r\n})(Services || (Services = {}));\r\nmodule.exports = Services;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\n/** FunctionUtil class\r\n * utility functions for calling functions\r\n * @author Benjamin\r\n * @since 2015-4-21\r\n */\r\nvar FunctionUtil = (function () {\r\n    function FunctionUtil() {\r\n    }\r\n    FunctionUtil.callFunc = function (func, thisArg) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        return FunctionUtil.applyFunc(func, thisArg, args);\r\n    };\r\n    FunctionUtil.applyFunc = function (func, thisArg, args) {\r\n        if (typeof func === \"function\") {\r\n            return func.apply(thisArg, args);\r\n        }\r\n        return null;\r\n    };\r\n    FunctionUtil.tryCatch = function (tryFunc, catchFunc, thisArg, args) {\r\n        var res = null;\r\n        if (typeof tryFunc === \"function\") {\r\n            try {\r\n                res = tryFunc.apply(thisArg, args);\r\n            }\r\n            catch (err) {\r\n                var catchRes = catchFunc(err);\r\n                if (catchRes != null) {\r\n                    res = catchRes;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    FunctionUtil.isFunction = function (func) {\r\n        return typeof func === \"function\";\r\n    };\r\n    /** Create a function that lazily returns a computed value\r\n     * @param {Function():T} initializer: the function that initializes the lazy field and returns it (this function will only be called once)\r\n     * @return {Function(): T} a function that returns the cached value returned by the {@code initializer} function\r\n     */\r\n    FunctionUtil.createLazyInitializedField = function (initializer) {\r\n        var value = null;\r\n        return function lazyInitializer() {\r\n            if (value == null) {\r\n                value = initializer();\r\n            }\r\n            return value;\r\n        };\r\n    };\r\n    /** A function which takes no arguments (or any arguments) and returns nothing */\r\n    FunctionUtil.NO_OP = function () {\r\n    };\r\n    // Alias for {@link #createLazyInitializedField}\r\n    FunctionUtil.lazyField = FunctionUtil.createLazyInitializedField;\r\n    return FunctionUtil;\r\n})();\r\nmodule.exports = FunctionUtil;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\n/** NumberUtil class\r\n * utility functions for converting numeric values to and from other formats\r\n * @author Benjamin\r\n * @since 2015-1-30\r\n */\r\nvar NumberUtil = (function () {\r\n    function NumberUtil() {\r\n    }\r\n    /** Returns true if the input argument is a number or a valid string representation of a number, false if not\r\n     */\r\n    NumberUtil.isNumeric = function (n) {\r\n        return NumberUtil.toNumber(n) != null;\r\n    };\r\n    /** Returns a number if the input argument is a number or a string representing a valid number, else returns null\r\n     */\r\n    NumberUtil.toNumber = function (n) {\r\n        var val = null;\r\n        return !isNaN((val = parseFloat(n))) && isFinite(val) ? val : null;\r\n    };\r\n    /**\r\n     * @param {Number} n: the number to check\r\n     * @return {Boolean} true if the parameter is null or zero, false if not\r\n     */\r\n    NumberUtil.isNullOrZero = function (n) {\r\n        return n == null || n === 0;\r\n    };\r\n    NumberUtil.getNullableNumeric = function (val) {\r\n        var value = val.val();\r\n        if (value.trim().length === 0) {\r\n            return null;\r\n        }\r\n        var num = value * 1;\r\n        return isNaN(num) ? null : num;\r\n    };\r\n    NumberUtil.roundTo = function (num, decimalPlaces) {\r\n        return parseFloat(num.toFixed(decimalPlaces));\r\n    };\r\n    NumberUtil.getNullableNumericPercent = function (val) {\r\n        var value = val.val();\r\n        value = value.replace(\"%\", \"\");\r\n        if (value.trim().length === 0) {\r\n            return null;\r\n        }\r\n        var num = value * 1;\r\n        return isNaN(num) ? null : num;\r\n    };\r\n    NumberUtil.orZero = function (num, infinityToZero) {\r\n        \"use strict\";\r\n        var val = (num == null || typeof (num) == \"number\") ? num : parseFloat(num);\r\n        return (num == null || isNaN(val) || (infinityToZero === true && (val === Infinity || val === Number.NEGATIVE_INFINITY || val === Number.POSITIVE_INFINITY))) ? 0 : val;\r\n    };\r\n    /** Convert a value like {@code 1340283.5264} to {@code 1,340,283.53}\r\n     * @param {String} value a value to convert to a currency value\r\n     * @param {Number} decimalPlaces the number of decimal places to include\r\n     * @param {Boolean} includeSeparator true to include a separator every {@code digitsBetweenSeparators} digits,\r\n     * false for no separator\r\n     * @param {Number} digitsBetweenSeparators: the number of digits between separators, for example {@code 3}\r\n     * would produce {@code 1,340,283.53}, but {@code 4} would produce {@code 134,0283.53}\r\n     * @return {String} a string representing the formatted numeric value\r\n     */\r\n    NumberUtil.format = function (value, decimalPlaces, includeSeparator, digitsBetweenSeparators) {\r\n        if (digitsBetweenSeparators === void 0) { digitsBetweenSeparators = 3; }\r\n        return NumberUtil.formatNumeric(value, decimalPlaces, includeSeparator);\r\n    };\r\n    /** remove all non [0-9] or '.' characters and return the resulting parsed number\r\n     */\r\n    NumberUtil.formatToNumber = function (input) {\r\n        var num = Number(input.toString().replace(/[^0-9\\.]+/g, \"\")); //parseFloat(input.toString().replace(/,/g, ''));\r\n        return num;\r\n    };\r\n    /** Convert a value like {@code 1340283.5264} to {@code 1,340,283.53}\r\n     * @param {String} value a value to convert to a currency value\r\n     * @param {Number} decimalPlaces the number of decimal places to include\r\n     * @param {Boolean} includeSeparator true to include a separator every {@code digitsBetweenSeparators}\r\n     * digits, false for no separator\r\n     * @param {Number} digitsBetweenSeparators: the number of digits between separators, for example {@code 3}\r\n     * would produce {@code 1,340,283.53}, but {@code 4} would produce {@code 134,0283.53}\r\n     * @return {String} a string representing the formatted numeric value\r\n     */\r\n    NumberUtil.formatNumeric = function (value, decimalPlaces, includeSeparator, digitsBetweenSeparators) {\r\n        \"use strict\";\r\n        if (digitsBetweenSeparators === void 0) { digitsBetweenSeparators = 3; }\r\n        if (value == null) {\r\n            return value;\r\n        }\r\n        var val = value.toString().trim();\r\n        // ensure the value is numeric\r\n        if (/(^(\\+|\\-)(0|([1-9][0-9]*))(\\.[0-9]+)?$)|(^(0{0,1}|([1-9][0-9]*))(\\.[0-9]+)?$)/.test(val) === false) {\r\n            return val;\r\n        }\r\n        var num = Number(val).toFixed(decimalPlaces);\r\n        // split the number into decimal and whole number parts\r\n        var valueParts = num.toString().trim().split(\".\");\r\n        var valueStr = valueParts[0];\r\n        // remove leading +- sign, so that values like -821999.00 does not become -,821,999.00\r\n        var isNegative = false;\r\n        if (valueStr.indexOf(\"+\") === 0) {\r\n            valueStr = valueStr.substr(1, valueStr.length - 1);\r\n        }\r\n        else if (valueStr.indexOf(\"-\") === 0) {\r\n            valueStr = valueStr.substr(1, valueStr.length - 1);\r\n            isNegative = true;\r\n        }\r\n        var result = \"\";\r\n        if (decimalPlaces > 0) {\r\n            var decimals = valueParts[1];\r\n            result = \".\" + decimals;\r\n        }\r\n        // add separators every N-characters\r\n        if (includeSeparator === true) {\r\n            for (var size = valueStr.length; size > 0; size -= digitsBetweenSeparators) {\r\n                result = (size - digitsBetweenSeparators > 0 ? \",\" : \"\") + valueStr.substring((size - digitsBetweenSeparators > 0 ? size - digitsBetweenSeparators : 0), size) + result;\r\n            }\r\n        }\r\n        else {\r\n            result = valueStr + result;\r\n        }\r\n        result = (isNegative ? \"-\" + result : result);\r\n        return result;\r\n    };\r\n    /** Prepend padding to a string or number until it reaches a maximum length\r\n     * @param {Object|String|Number}: the value to convert to a string and pad\r\n     * @param {Integer} maxDigits: the maximum length of the returned string\r\n     * @param {String} [padChar]: an optional character to use as the left padding instead of '0'\r\n     * @return {String} the {@code value} converted to a string padded with {@code padChar} or '0'\r\n     */\r\n    NumberUtil.padZeroLeft = function (value, maxDigits, padChar) {\r\n        \"use strict\";\r\n        if (String(value).length > maxDigits) {\r\n            return value;\r\n        }\r\n        if (value && value.toString().indexOf(\".\") > 0) {\r\n            value = parseFloat(value).toFixed(2);\r\n            value = value.toString().replace(\".\", \"\");\r\n        }\r\n        return value ? new Array(maxDigits - String(value).length + 1).join(padChar || '0') + value : value;\r\n    };\r\n    return NumberUtil;\r\n})();\r\nmodule.exports = NumberUtil;\r\n",
    "/* @license (c) Copyright 2014 HDS IP Holdings, LLC. All Rights Reserved. */\r\nvar NumberUtil = require(\"./NumberUtil\");\r\n/** ObjectUtil class\r\n * object manipulation utility functions\r\n * @author Benjamin\r\n * @since 2014-10-24\r\n */\r\nvar ObjectUtil = (function () {\r\n    function ObjectUtil() {\r\n    }\r\n    /** Get a set of property values from an object.\r\n     * The list of property names can be provided, or if not provided,\r\n     * all of the object's key values will be retrieved.\r\n     * Example: {@code ObjectUtil.values({ alpha: \"1\", beta: \"2\", charlie: \"3\" })}\r\n     * returns: {@code [\"1\", \"2\", \"3\"]}\r\n     *\r\n     * @param {Object} obj: the object to retrieve property values from\r\n     * @param {Array<String>} [keys=Object.keys(obj)]: the list of property names\r\n     * to retrieve from the object\r\n     * @return {Array} the values associated with {@code keys} or {@code Object.keys(obj)}\r\n     */\r\n    ObjectUtil.values = function (obj, keys) {\r\n        \"use strict\";\r\n        if (keys != null && !Array.isArray(keys)) {\r\n            throw new Error(\"incorrect usage (\" + obj + \", \" + keys + \"), expected (Object obj, Array<String> [keys])\");\r\n        }\r\n        if (keys == null) {\r\n            keys = Object.keys(obj);\r\n        }\r\n        return keys.map(function (prop) {\r\n            return obj[prop];\r\n        });\r\n    };\r\n    /** Get a set of non-null property values from an object.\r\n     * The list of property names can be provided, or if not provided,\r\n     * all of the object's key values will be retrieved.\r\n     * Example: {@code ObjectUtil.valuesNotNull({ alpha: \"1\", beta: \"2\", charlie: \"3\", delta: null })}\r\n     * returns: {@code [\"1\", \"2\", \"3\"]}\r\n     *\r\n     * @param {Object} obj: the object to retrieve property values from\r\n     * @param {Array<String>} [keys=Object.keys(obj)]: the list of property names\r\n     * to retrieve from the object\r\n     * @return {Array} the non-null values associated with {@code keys} or the\r\n     * non-null values associated with {@code Object.keys(obj)}\r\n     */\r\n    ObjectUtil.valuesNotNull = function (obj, keys) {\r\n        \"use strict\";\r\n        if (keys != null && !Array.isArray(keys)) {\r\n            throw new Error(\"incorrect usage (\" + obj + \", \" + keys + \"), expected (Object obj, Array<String> [keys])\");\r\n        }\r\n        if (keys == null) {\r\n            keys = Object.keys(obj);\r\n        }\r\n        return keys.filter(function (prop) {\r\n            return obj[prop] != null;\r\n        }).map(function (prop) {\r\n            return obj[prop];\r\n        });\r\n    };\r\n    /** Check if an object has at least 1 non-null property from a list of property names\r\n     * @see #hasMatchingProperties()\r\n     */\r\n    ObjectUtil.hasAnyNonFalseyProperties = function (obj, propNames) {\r\n        return ObjectUtil.hasMatchingProperties(obj, propNames, function template_notNull(val) {\r\n            return !!val;\r\n        }, propNames != null ? 1 : 0);\r\n    };\r\n    /** Check if an object has at least 1 non-null property from a list of property names\r\n     * @see #hasMatchingProperties()\r\n     */\r\n    ObjectUtil.hasAnyNonNullProperties = function (obj, propNames) {\r\n        return ObjectUtil.hasMatchingProperties(obj, propNames, function template_notNull(val) {\r\n            return val != null;\r\n        }, propNames != null ? 1 : 0);\r\n    };\r\n    /** Check if an object has non-null values for all of the propery names specified\r\n     * @see #hasMatchingProperties()\r\n     */\r\n    ObjectUtil.hasNonNullProperties = function (obj, propNames) {\r\n        return ObjectUtil.hasMatchingProperties(obj, propNames, function template_notNull(val) {\r\n            return val != null;\r\n        }, propNames != null ? propNames.length : 0);\r\n    };\r\n    /** Check if an object has matching values for all of the properties specified\r\n     * Example: {@code hasMatchingProperties({ alpha: 100 }, [\"alpha\"], function (v) { return v != null; })}\r\n     * returns: {@code true}\r\n     * Or example: {@code hasMatchingProperties({ alpha: 100, beta: null }, [\"alpha\", \"beta\", \"gamma\", \"delta\", \"epsilon\"], function (v) { return v != null; }, 3)}\r\n     * returns: {@code false} (and should return after checking 4 properties, since there are 5 properties, only 1 of the first 4 matches, and 3 are required)\r\n     *\r\n     * @param {Object} obj: the object to check\r\n     * @param {Array<String>} propNames: the array of property names to check for in {@code obj}\r\n     * @param {Number} requiredCount: the number of properties (in the order they appear in the {@code propNames} array)\r\n     * required to be non-null before returning true, defaults to the size in the {@code propNames} array\r\n     * @return {Boolean} true if the required number of properties exist in the object and match the condition function specified, false otherwise\r\n     */\r\n    ObjectUtil.hasMatchingProperties = function (obj, propNames, template_condition, requiredCount) {\r\n        \"use strict\";\r\n        if (requiredCount === void 0) { requiredCount = (propNames != null ? propNames.length : 0); }\r\n        if (obj == null) {\r\n            return false;\r\n        }\r\n        if (!Array.isArray(propNames)) {\r\n            throw new Error(\"incorrect usage (\" + obj + \", \" + propNames + \"), expected (Object obj, Array<String> propNames, Function template_condition, Number requiredCount?)\");\r\n        }\r\n        var nonNullCount = 0;\r\n        for (var i = 0, size = propNames.length; i < size; i++) {\r\n            var propNameI = propNames[i];\r\n            // test each property\r\n            if (obj.hasOwnProperty(propNameI) && template_condition(obj[propNameI]) === true) {\r\n                nonNullCount++;\r\n                if (nonNullCount >= requiredCount) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (i - nonNullCount >= size - requiredCount) {\r\n                break;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /** Return the first non-null argument\r\n     * @param {Object...} arguments: an list of parameters to search through\r\n     * @return {Object|null} the first argument that is not null, or null if all of the arguments are null\r\n     */\r\n    ObjectUtil.coalesce = function () {\r\n        \"use strict\";\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i - 0] = arguments[_i];\r\n        }\r\n        for (var i = 0, size = args.length; i < size; i++) {\r\n            var arg = args[i];\r\n            if (arg != null) {\r\n                return arg;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /** convert undefined values to null\r\n     * @param {Object} obj: the object to return if not null\r\n     * @return {Object|null} the {@code obj} if it is not null, else null\r\n     */\r\n    ObjectUtil.orNull = function (obj) {\r\n        \"use strict\";\r\n        return obj == null ? null : obj;\r\n    };\r\n    /** Get a property from an object without the risk of an undefined error.\r\n     * Return null if either the object or the property are null or undefined.\r\n     * Example: {@code getProp(undefined, \"alpha\")}\r\n     * returns: {@code null}\r\n     * Or example: {@code getProp({ alpha: 342 }, \"alpha\")}\r\n     * returns: {@code 342}\r\n     *\r\n     * @param {Object} obj: the object to retrieve the property from\r\n     * @param {String} propertyName: the name of the object property to retrieve\r\n     * @return {*|null} the property retrieved from the object if both the object and property are not null, else null\r\n     */\r\n    ObjectUtil.getProp = function (obj, propertyName) {\r\n        \"use strict\";\r\n        if (obj == null) {\r\n            return null;\r\n        }\r\n        var prop = obj[propertyName];\r\n        return prop == null ? null : prop;\r\n    };\r\n    /** Get multiple properties from an object without the risk of an undefined error.\r\n     * Return an empty array if either the object or the list of property names are null or undefined.\r\n     * Example: {@code getProps(undefined, [\"alpha\", \"beta\"])}\r\n     * returns: {@code []}\r\n     * Or example: {@code getProp({ alpha: 342, beta: \"B\" }, [\"alpha\", \"beta\"])}\r\n     * returns: {@code [342, \"B\"]}\r\n     *\r\n     * @param {Object} obj: the object to retrieve the properties from\r\n     * @param {Arrya<String>} propertyNames: the names of the object properties to retrieve\r\n     * @return {Array} the properties retrieved from the object if both the object\r\n     * and property names are not null, else an empty array\r\n     */\r\n    ObjectUtil.getProps = function (obj, propertyNames) {\r\n        \"use strict\";\r\n        if (obj == null || propertyNames == null || !Array.isArray(propertyNames)) {\r\n            return [];\r\n        }\r\n        var size = propertyNames.length;\r\n        var res = new Array(size);\r\n        for (var i = 0; i < size; i++) {\r\n            res[i] = obj[propertyNames[i]] || null;\r\n        }\r\n        return res;\r\n    };\r\n    ObjectUtil.orZero = function (num, infinityToZero) {\r\n        \"use strict\";\r\n        return NumberUtil.orZero(num, infinityToZero);\r\n    };\r\n    /** Convert null or undefined values to an empty string, else returns the value unmodified\r\n     * Example: {@code orEmptyString(8543.213)}\r\n     * returns: {@code 8543.213}\r\n     * Or example: {@code orEmptyString(null)}\r\n     * returns: {@code \"\"}\r\n     *\r\n     * @param {Object} val: the value to check\r\n     * @return {Object} the {@code val} object or {@code \"\"} if val is null or undefined\r\n     */\r\n    ObjectUtil.orEmptyString = function (val) {\r\n        \"use strict\";\r\n        return val != null ? val : \"\";\r\n    };\r\n    /** Modify classChild to extend classParent via prototypal inheritance.\r\n     * Side-effect: classChild's prototype is modified.\r\n     * @param {Object} classChild: the sub class that inherits from {@code classParent}\r\n     * @param {Object} classParent: the super class that {@code classChild} will inherit from\r\n     * @param {Boolean} allowChildToOverride: true to keep existing {@code classChild} properties, false to overwrite\r\n     * child properties with parent properties when classParent and classChild have properties with the same name\r\n     */\r\n    ObjectUtil.extend = function (classChild, classParent, allowChildToOverride) {\r\n        \"use strict\";\r\n        if (allowChildToOverride === void 0) { allowChildToOverride = true; }\r\n        if (classParent.prototype == null) {\r\n            throw new Error(classParent + \", does not have the property '.prototype'\");\r\n        }\r\n        var childProto = classChild.prototype;\r\n        var newChildProto = Object.create(classParent.prototype);\r\n        classChild.prototype = newChildProto;\r\n        for (var key in childProto) {\r\n            if (childProto.hasOwnProperty(key)) {\r\n                if (allowChildToOverride && newChildProto.hasOwnProperty(key)) {\r\n                }\r\n                else {\r\n                    newChildProto[key] = childProto[key];\r\n                }\r\n            }\r\n        }\r\n        Object.defineProperty(classChild.prototype, \"constructor\", {\r\n            value: classChild\r\n        });\r\n    };\r\n    /** Modify classChild to extend classParent via prototype-to-static inheritance.\r\n     * Side-effect: classChild is modified.\r\n     * @param {Object} classChild: the sub class that inherits from {@code classParent}\r\n     * @param {Object} classParent: the super class that {@code classChild} will inherit from\r\n     * @param {Boolean} allowChildToOverride: true to keep existing {@code classChild} properties, false to overwrite\r\n     * child properties with parent properties when classParent and classChild have properties with the same name,\r\n     * also see {@code throwErrorIfOverwrites}\r\n     * @param {Boolean} throwErrorIfOverwrites: true to throw an error if a {@code classParent} property overwrites\r\n     * a {@code classChild} property, false to ignore the parent property and keep the classChild property\r\n     * @see #extend()\r\n     */\r\n    ObjectUtil.extendToStatic = function (classChild, classParent, allowChildToOverride, throwErrorIfOverwrites) {\r\n        \"use strict\";\r\n        if (allowChildToOverride === void 0) { allowChildToOverride = true; }\r\n        if (throwErrorIfOverwrites === void 0) { throwErrorIfOverwrites = true; }\r\n        var parentProto = classParent.prototype;\r\n        for (var key in parentProto) {\r\n            if (parentProto.hasOwnProperty(key)) {\r\n                if (allowChildToOverride && classChild.hasOwnProperty(key)) {\r\n                    if (throwErrorIfOverwrites) {\r\n                        throw new Error(classChild + \" already has a property named '\" + key + \"', cannot inherit from parent \" + classParent);\r\n                    }\r\n                }\r\n                else {\r\n                    classChild[key] = parentProto[key];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /** Return the prototype tree of a specified object\r\n     * @return {Array} an array of objects, where the first object is {@code obj}\r\n     * and each following object is the prototype of the previous object\r\n     */\r\n    ObjectUtil.getPrototypeTree = function (obj) {\r\n        var res = [];\r\n        var proto = obj;\r\n        do {\r\n            res.push(proto);\r\n            proto = Object.getPrototypeOf(proto);\r\n        } while (proto != null);\r\n        return res;\r\n    };\r\n    /** Search for a matching constructor by name up an object's prototype tree\r\n     * @param {Object} obj: search this object's prototype tree\r\n     * @param {String} name: the name of the prototype constructor to search for\r\n     * @return {Object} the matching 'constructor' prototype object or null\r\n     * if a matching constructor could not be located\r\n     */\r\n    ObjectUtil.getParentConstructorByName = function (obj, name) {\r\n        if (obj == null) {\r\n            throw new Error(\"incorrect usage (\" + obj + \", \" + name + \"), expected (Object obj, String name)\");\r\n        }\r\n        var proto = obj;\r\n        do {\r\n            if (proto.constructor.name === name) {\r\n                return proto.constructor;\r\n            }\r\n            proto = Object.getPrototypeOf(proto);\r\n        } while (proto != null);\r\n        return null;\r\n    };\r\n    /** Run a set of test functions\r\n     * @param {Array<Function(Object)>} testFunctions: an array of functions that\r\n     * accept a test parameter object that has the following properties:\r\n     * {Function(String, Array)} 'success' which should be called if the test succeeds\r\n     * {Function(String, Array)} 'fail' which should be called if the test fails\r\n     */\r\n    ObjectUtil.runTest = function (testFunctions) {\r\n        if (!Array.isArray(testFunctions)) {\r\n            if (typeof testFunctions !== \"function\") {\r\n                throw new Error(\"incorrect usage, (\" + testFunctions + \"), expected (Array<Function(Object)>|Function(Object) testFunctions)\");\r\n            }\r\n            testFunctions = [testFunctions];\r\n        }\r\n        var testParams = testParams || {\r\n            success: function (testName, results) {\r\n                if (typeof testName !== \"string\" || !Array.isArray(results)) {\r\n                    throw new Error(\"test success() callback expects (String testName, Array results)\");\r\n                }\r\n                console.log(\"success: '\" + testName + \"'\", results);\r\n            },\r\n            fail: function (testName, results) {\r\n                if (typeof testName !== \"string\" || !Array.isArray(results)) {\r\n                    throw new Error(\"test fail() callback expects (String testName, Array results)\");\r\n                }\r\n                console.error(\"fail: '\" + testName + \"'\", results);\r\n            }\r\n        };\r\n        for (var i = 0, size = testFunctions.length; i < size; i++) {\r\n            testFunctions[i](testParams);\r\n        }\r\n    };\r\n    return ObjectUtil;\r\n})();\r\nmodule.exports = ObjectUtil;\r\n",
    "\"use strict\";\r\nvar TestUserController = require(\"../controllers/TestUserController\");\r\n/**\r\n * @since 2015-8-11\r\n */\r\nvar TestUserView = (function () {\r\n    function TestUserView() {\r\n    }\r\n    TestUserView.newView = function (model, domContext) {\r\n        var inst = new TestUserView();\r\n        inst.model = model;\r\n        inst.domContext = domContext;\r\n        var nameField = domContext.querySelector(\".user-name-input.text-field\");\r\n        var resultElem = domContext.querySelector(\".user-name-result\");\r\n        function validateBtnListener(evt) {\r\n            var userName = (nameField.value || \"\").trim();\r\n            resultElem.textContent = \"Loading...\";\r\n            TestUserController.isValidUserByName(userName).done(function (success) {\r\n                resultElem.textContent = success ? \"found user '\" + encodeURIComponent(userName) + \"'\" : \"could not find user '\" + encodeURIComponent(userName) + \"'\";\r\n            }, function (err) {\r\n                resultElem.textContent = \"failed to validate user name: \" + err;\r\n            });\r\n        }\r\n        domContext.querySelector(\".validate-user-name.btn\").addEventListener(\"click\", validateBtnListener);\r\n        inst.validateBtnListener = validateBtnListener;\r\n        return inst;\r\n    };\r\n    TestUserView.deregister = function (view) {\r\n        view.domContext.querySelector(\".validate-user-name.btn\").removeEventListener(\"click\", view.validateBtnListener);\r\n        view.domContext = null;\r\n        view.model = null;\r\n        view.validateBtnListener = null;\r\n    };\r\n    return TestUserView;\r\n})();\r\nmodule.exports = TestUserView;\r\n",
    "(function (global){\n/**\n * @license\n * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n      descriptor.value = null;\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * https://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.2';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})",
    "(function (process){\n// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected() {\n            pendingCount--;\n            if (pendingCount === 0) {\n                deferred.reject(new Error(\n                    \"Can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected.\"\n                ));\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n}).call(this,require(\"uiHBzj\"))",
    "// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n"
  ]
}